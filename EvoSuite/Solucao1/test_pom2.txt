<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mycompany</groupId>
  <artifactId>Solucao1</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <exec.mainClass>com.mycompany.solucao1.Solucao1</exec.mainClass>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- JUnit BOM para gerir versões -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.9.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- JUnit 5 API e Engine -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Mockito para mocks nos testes -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>4.11.0</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 4 para compatibilidade, se precisares -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit Vintage Engine para executar testes JUnit 4 dentro do JUnit 5 -->
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.9.2</version>
      <scope>test</scope>
    </dependency>

    <!-- EvoSuite runtime necessário para os testes gerados -->
    <dependency>
      <groupId>org.evosuite</groupId>
      <artifactId>evosuite-standalone-runtime</artifactId>
      <version>1.0.6</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- Plugin de compilação -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
      </plugin>

      <!-- Plugin Surefire para correr testes -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M6</version>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>
            --add-exports java.base/sun.net.util=ALL-UNNAMED
            --add-opens java.base/java.net=ALL-UNNAMED
            --add-opens java.desktop/java.awt=ALL-UNNAMED
            -Djava.awt.headless=true
            -Devosuite.test_no_security_manager=true
          </argLine>
          <properties>
            <property>
              <name>listener</name>
              <value>org.evosuite.runtime.InitializingListener</value>
            </property>
          </properties>
        </configuration>
      </plugin>

      <!-- Plugin EvoSuite para gerar os testes -->
      <plugin>
        <groupId>org.evosuite.plugins</groupId>
        <artifactId>evosuite-maven-plugin</artifactId>
        <version>1.0.6</version>
        <executions>
          <execution>
            <id>generate-tests</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Tempo limite por classe (segundos) -->
          <search_budget>30</search_budget>

          <!-- Diretório dos testes gerados -->
          <test_dir>${project.build.directory}/generated-test-sources/evosuite</test_dir>

          <!-- Classpath para encontrar classes -->
          <projectCP>${project.build.outputDirectory}</projectCP>

          <!-- Para evitar problemas headless -->
          <java_opts>-Djava.awt.headless=true</java_opts>
        </configuration>
      </plugin>

      <!-- Plugin JaCoCo para gerar relatório de cobertura -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <repository>
      <id>evosuite-repo</id>
      <url>http://www.evosuite.org/m2</url>
    </repository>
  </repositories>

</project>

